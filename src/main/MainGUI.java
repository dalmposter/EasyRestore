package main;

import java.io.File;
import java.util.Arrays;
import java.util.logging.Level;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.JTextArea;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author DominicLocal
 */
public class MainGUI extends javax.swing.JFrame implements Runnable {

    public int addProgress = 0;
    public int addBackupProgress = 0;
            
    private static Thread t;
    private static String threadName;

    private EasyRestore main;
    /**
     * Creates new form MainGUI
     * @param master
     */
    public MainGUI(EasyRestore master) {
        main = master;
        threadName = "GUI";
        initComponents();
    }

    public void log(String msg)
    {
        logArea.setText(logArea.getText() + "\n " + msg);
    }
    
    public void logBackup(String msg)
    {
        logAreaBackup.setText(logAreaBackup.getText() + "\n " + msg);
    }
    
    public void addProgress(int amt)
    {
        //TODO
    }
    
    @Override
    public void run()
    {
        try
        {
            String client = new File(EasyRestore.class.getProtectionDomain().getCodeSource().getLocation().toURI()).getParentFile().getPath();
            textClientDir.setText(client + "\\dependancies\\bitbucket-restore-client.jar");
            textBackupClientDir.setText(client + "\\dependancies\\bitbucket-backup-client.jar");
        }
        catch (Exception e)
        {
            main.log(Level.WARNING, "Couldn't find working directory for the client");
            textClientDir.setText("");
            textBackupClientDir.setText("");
        }
        
        while(true)
        {
            progressBar.setValue(addProgress);
            progressBar.setStringPainted(true);
            
            progressBarBackup.setValue(addProgress);
            progressBarBackup.setStringPainted(true);
            try
            {
                Thread.sleep(250);
            }
            catch(Exception e)
            {
                System.out.println("Thread " + threadName + " interrupted");
            }
        }
    }
   
    public void start()
    {
        if(t == null)
        {
            t = new Thread(this, threadName);
            t.start();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        textBackupHomeDir = new javax.swing.JTextField();
        browseInstallDir1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        textBackupBackupDir = new javax.swing.JTextField();
        browseInstallDir2 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        textBackupClientDir = new javax.swing.JTextField();
        browseClientDir1 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        textAdminName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        textBackupUrl = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        passwordAdminPw = new javax.swing.JPasswordField();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        progressBarBackup = new javax.swing.JProgressBar();
        labelProgress1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        logAreaBackup = new javax.swing.JTextArea();
        buttonQuit1 = new javax.swing.JButton();
        buttonBackup = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        textClientDir = new javax.swing.JTextField();
        browseClientDir = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        buttonRestore = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        buttonQuit = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        dbPassword = new javax.swing.JPasswordField();
        browseHomeDir = new javax.swing.JButton();
        textHomeDir = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        textBackupDir = new javax.swing.JTextField();
        browseBackupDir = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        textDbIp = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        textDbName = new javax.swing.JTextField();
        progressBar = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        labelProgress = new javax.swing.JLabel();
        textInstallDir = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        browseInstallDir = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        textDbAccount = new javax.swing.JTextField();
        comboDbProvider = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 480));
        setResizable(false);
        setSize(new java.awt.Dimension(700, 480));

        jLabel8.setText("Bitbucket Home Directory:");

        textBackupHomeDir.setText("C:\\Atlassian\\Bitbucket\\5.13.1");

        browseInstallDir1.setText("Browse");
        browseInstallDir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseInstallDir1ActionPerformed(evt);
            }
        });

        jLabel9.setText("Store Backups In:");

        textBackupBackupDir.setText("C:\\Atlassian\\Bitbucket\\5.13.1");

        browseInstallDir2.setText("Browse");
        browseInstallDir2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseInstallDir2ActionPerformed(evt);
            }
        });

        jLabel13.setText("Bitbucket Backup Client (.jar) Location:");

        textBackupClientDir.setText("C:\\Atlassian\\bitbucket-backup-client-3.3.4\\bitbucket-restore-client.jar");

        browseClientDir1.setText("Browse");
        browseClientDir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseClientDir1ActionPerformed(evt);
            }
        });

        jLabel14.setText("Bitbucket Admin Account:");

        textAdminName.setText("sysadmin");
        textAdminName.setMinimumSize(new java.awt.Dimension(370, 20));

        jLabel15.setText("Bitbucket Admin Password:");

        textBackupUrl.setText("localhost:7990");
        textBackupUrl.setMinimumSize(new java.awt.Dimension(370, 20));

        jLabel16.setText("Bitbucket Base URL:");

        labelProgress1.setText("Progress:");

        jLabel17.setText("Log:");

        logAreaBackup.setColumns(20);
        logAreaBackup.setRows(5);
        jScrollPane2.setViewportView(logAreaBackup);

        buttonQuit1.setText("Quit");
        buttonQuit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonQuit1ActionPerformed(evt);
            }
        });

        buttonBackup.setText("Start Backup");
        buttonBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jSeparator4)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(textBackupHomeDir, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(browseInstallDir1)
                                .addGap(5, 5, 5))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(textBackupBackupDir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(browseInstallDir2)
                                .addGap(6, 6, 6))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textBackupClientDir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(browseClientDir1)
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(150, 150, 150)
                                .addComponent(labelProgress1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(progressBarBackup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(buttonQuit1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonBackup)))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jSeparator5)
                        .addContainerGap(4, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(textBackupUrl, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(textAdminName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passwordAdminPw, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textBackupHomeDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(browseInstallDir1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textBackupBackupDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(browseInstallDir2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textBackupClientDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(browseClientDir1))
                .addGap(18, 18, 18)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(textAdminName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(passwordAdminPw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(textBackupUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(labelProgress1))
                    .addComponent(progressBarBackup, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonBackup)
                    .addComponent(buttonQuit1))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Backup", jPanel2);

        jLabel11.setText("Bitbucket Account Password:");

        jLabel12.setText("Bitbucket Restore Client (.jar) Location:");

        textClientDir.setText("C:\\Atlassian\\bitbucket-backup-client-3.3.4\\bitbucket-restore-client.jar");

        browseClientDir.setText("Browse");
        browseClientDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseClientDirActionPerformed(evt);
            }
        });

        buttonRestore.setText("Start Restore");
        buttonRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRestoreActionPerformed(evt);
            }
        });

        buttonCancel.setText("Cancel Restore");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        buttonQuit.setText("Quit");
        buttonQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonQuitActionPerformed(evt);
            }
        });

        jLabel4.setText("Bitbucket Home Directory:");

        dbPassword.setText("CH4NG3M3");

        browseHomeDir.setText("Browse");
        browseHomeDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseHomeDirActionPerformed(evt);
            }
        });

        textHomeDir.setText("C:\\Atlassian\\ApplicationData\\Bitbucket");

        jLabel5.setText("Location of Backup (.tar):");

        textBackupDir.setText("C:\\Atlassian\\Backups\\backups\\bitbucket-20180905-102803-342.tar");
        textBackupDir.setMinimumSize(new java.awt.Dimension(370, 20));

        browseBackupDir.setText("Browse");
        browseBackupDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseBackupDirActionPerformed(evt);
            }
        });

        jLabel6.setText("Database Server IP:");

        textDbIp.setText("localhost:5432");
        textDbIp.setMinimumSize(new java.awt.Dimension(370, 20));

        jLabel7.setText("Database Name:");

        textDbName.setText("bitbucket");
        textDbName.setMinimumSize(new java.awt.Dimension(370, 20));

        logArea.setColumns(20);
        logArea.setRows(5);
        jScrollPane1.setViewportView(logArea);

        jLabel1.setText("Log:");

        labelProgress.setText("Progress (0%):");

        textInstallDir.setText("C:\\Atlassian\\Bitbucket\\5.13.1");

        jLabel3.setText("Bitbucket Install Directory:");

        browseInstallDir.setText("Browse");
        browseInstallDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseInstallDirActionPerformed(evt);
            }
        });

        jLabel10.setText("Bitbucket Account Name:");

        textDbAccount.setText("bitbucketuser");
        textDbAccount.setMinimumSize(new java.awt.Dimension(370, 20));

        comboDbProvider.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PostgreSQL", "MySQL", "Microsoft SQL", "Oracle SQL" }));

        jLabel2.setText("Database Provider:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(textInstallDir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(browseInstallDir))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(textBackupDir, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(browseBackupDir))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(textHomeDir)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(browseHomeDir)))))
                        .addGap(5, 5, 5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(150, 150, 150)
                                .addComponent(labelProgress)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(buttonQuit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonCancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonRestore))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textClientDir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(browseClientDir))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(textDbAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(comboDbProvider, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(textDbIp, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dbPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(textDbName, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())
                    .addComponent(jSeparator1)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textInstallDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(browseInstallDir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(browseHomeDir)
                    .addComponent(textHomeDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(browseBackupDir)
                    .addComponent(textBackupDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboDbProvider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textDbIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(textDbName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(textDbAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(dbPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textClientDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(browseClientDir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(labelProgress))
                    .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonRestore)
                    .addComponent(buttonCancel)
                    .addComponent(buttonQuit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Restore", jPanel1);

        jTabbedPane1.setSelectedIndex(1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRestoreActionPerformed
        if(!main.busy()) main.executing = true;
        else JOptionPane.showMessageDialog(null, "You cannot perform operations while a restore is in progress", "Restore In Progress", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_buttonRestoreActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonQuitActionPerformed
        if(!main.busy()) System.exit(0);
        else JOptionPane.showMessageDialog(null, "You cannot perform operations while a restore is in progress", "Restore In Progress", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_buttonQuitActionPerformed

    private void browseInstallDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseInstallDirActionPerformed
        if(!main.busy())
        {
            JFileChooser fc = new JFileChooser();
            int returnVal = fc.showOpenDialog(this);
            if(returnVal == JFileChooser.APPROVE_OPTION)
            {
                File file = fc.getSelectedFile();
                textInstallDir.setText(file.getPath());
            }
        }
        else JOptionPane.showMessageDialog(null, "You cannot perform operations while a restore is in progress", "Restore In Progress", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_browseInstallDirActionPerformed

    private void browseHomeDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseHomeDirActionPerformed
        if(!main.busy())
        {
            JFileChooser fc = new JFileChooser();
            int returnVal = fc.showOpenDialog(this);
            if(returnVal == JFileChooser.APPROVE_OPTION)
            {
                File file = fc.getSelectedFile();
                textHomeDir.setText(file.getPath());
            }
        }
        else JOptionPane.showMessageDialog(null, "You cannot perform operations while a restore is in progress", "Restore In Progress", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_browseHomeDirActionPerformed

    private void browseBackupDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseBackupDirActionPerformed
        if(!main.busy())
        {
            JFileChooser fc = new JFileChooser();
            int returnVal = fc.showOpenDialog(this);
            if(returnVal == JFileChooser.APPROVE_OPTION)
            {
                File file = fc.getSelectedFile();
                textBackupDir.setText(file.getPath());
            }
        }
        else JOptionPane.showMessageDialog(null, "You cannot perform operations while a restore is in progress", "Restore In Progress", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_browseBackupDirActionPerformed

    private void browseClientDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseClientDirActionPerformed
        if(!main.busy())
        {
            JFileChooser fc = new JFileChooser();
            int returnVal = fc.showOpenDialog(this);
            if(returnVal == JFileChooser.APPROVE_OPTION)
            {
                File file = fc.getSelectedFile();
                textClientDir.setText(file.getPath());
            }
        }
        else JOptionPane.showMessageDialog(null, "You cannot perform operations while a restore is in progress", "Restore In Progress", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_browseClientDirActionPerformed

    private void browseInstallDir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseInstallDir1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_browseInstallDir1ActionPerformed

    private void browseInstallDir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseInstallDir2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_browseInstallDir2ActionPerformed

    private void browseClientDir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseClientDir1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_browseClientDir1ActionPerformed

    private void buttonQuit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonQuit1ActionPerformed
        if(main.busy()) JOptionPane.showMessageDialog(null, "You cannot perform operations while a backup is in progress", "Backup In Progress", JOptionPane.OK_OPTION);
        else System.exit(0);
    }//GEN-LAST:event_buttonQuit1ActionPerformed

    private void buttonBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackupActionPerformed
        if(main.busy()) JOptionPane.showMessageDialog(null, "You cannot perform operations while a backup is in progress", "Backup In Progress", JOptionPane.OK_OPTION);
        else System.exit(0);
    }//GEN-LAST:event_buttonBackupActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new MainGUI().setVisible(true);
            }
        });
    }

    public String getHomeDir()
    {
        return textHomeDir.getText();
    }
    
    public String getBackupHomeDir()
    {
        return textBackupHomeDir.getText();
    }
    
    public String getInstallDir()
    {
        return textInstallDir.getText();
    }
    
    public String getBackupDir()
    {
        return textBackupDir.getText();
    }
    
    public int getDatabase()
    {
        return comboDbProvider.getSelectedIndex();
    }
    
    public String getDbIp()
    {
        return textDbIp.getText();
    }
    
    public String getDbName()
    {
        return textDbName.getText();
    }
    
    public String getDbAccount()
    {
        return textDbAccount.getText();
    }
    
    public String getBackupBackupDir()
    {
        return textBackupBackupDir.getText();
    }
    
    public String getBaseUrl()
    {
        return textBackupUrl.getText();
    }
    
    public String getDbPw()
    {
        char[] out = dbPassword.getPassword();
        String outStr = "";
        for(char ch : out)
        {
            outStr += ch;
        }
        
        return outStr;
    }

    public String getAdminName()
    {
        return textAdminName.getText();
    }
    
    
    public String getAdminPw()
    {
        char[] out = passwordAdminPw.getPassword();
        String outStr = "";
        for(char ch : out)
        {
            outStr += ch;
        }
        
        return outStr;
    }
    
    public String getBackupClientDir()
    {
        return textBackupClientDir.getText();
    }
    
    public JProgressBar getProgressBar()
    {
        return progressBar;
    }
    
    public JTextArea getLogArea()
    {
        return logArea;
    }
    
    public JLabel getProgressLabel()
    {
        return labelProgress;
    }
    
    public String getClientDir()
    {
        return textClientDir.getText();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseBackupDir;
    private javax.swing.JButton browseClientDir;
    private javax.swing.JButton browseClientDir1;
    private javax.swing.JButton browseHomeDir;
    private javax.swing.JButton browseInstallDir;
    private javax.swing.JButton browseInstallDir1;
    private javax.swing.JButton browseInstallDir2;
    private javax.swing.JButton buttonBackup;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonQuit;
    private javax.swing.JButton buttonQuit1;
    private javax.swing.JButton buttonRestore;
    private javax.swing.JComboBox<String> comboDbProvider;
    private javax.swing.JPasswordField dbPassword;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelProgress;
    private javax.swing.JLabel labelProgress1;
    private javax.swing.JTextArea logArea;
    private javax.swing.JTextArea logAreaBackup;
    private javax.swing.JPasswordField passwordAdminPw;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JProgressBar progressBarBackup;
    private javax.swing.JTextField textAdminName;
    private javax.swing.JTextField textBackupBackupDir;
    private javax.swing.JTextField textBackupClientDir;
    private javax.swing.JTextField textBackupDir;
    private javax.swing.JTextField textBackupHomeDir;
    private javax.swing.JTextField textBackupUrl;
    private javax.swing.JTextField textClientDir;
    private javax.swing.JTextField textDbAccount;
    private javax.swing.JTextField textDbIp;
    private javax.swing.JTextField textDbName;
    private javax.swing.JTextField textHomeDir;
    private javax.swing.JTextField textInstallDir;
    // End of variables declaration//GEN-END:variables
}
